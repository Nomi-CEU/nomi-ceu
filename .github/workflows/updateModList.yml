name: Update Mod List

on: 
  push:
    branches:
      - main
      - test_buildscript*
    paths:
      - "manifest.json"
  workflow_dispatch:
    inputs:
      tag:
        description: |
          Release Version (aka 1.6.1a, 1.6.1-beta-3, 2.0, etc.), to put into brackets next to the release type. 

          Must be a previous tag. Will also be the tag checked out to find the mod changes.
          
          MUST NOT BE SET, if Release Type is set to something!
        required: false
      release_type:
        description: 'Release Type. Do not set to update the mod list for the latest GitHub State.'
        type: choice
        required: false
        default: ''
        options:
          - ''
          - 'Release'
          - 'Beta Release'
          - 'Alpha Release'

jobs: 
  updateModList:
    name: Update Mod List
    runs-on: ubuntu-latest
    env:
      GITHUB_TAG: "${{ inputs.tag }}"
      RELEASE_TYPE: "${{ inputs.release_type }}"
    permissions:
      contents: write

    steps:
      # No need to checkout at ref, update mod list grabs manifest from GITHUB_TAG
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Restore Cached Files
        uses: actions/cache@v3
        id: cache
        with:
          path: |
            ~/.npm
            ./.cache
            ./tools/node_modules
          key: ${{ runner.os }}-bunny-${{ hashFiles('**/.cache', '**/package-lock.json', '**/manifest.json') }}
          restore-keys: ${{ runner.os }}-bunny-

      - name: Setup NodeJS v16
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          check-latest: true

      - name: Setup NPM Packages
        working-directory: ./tools
        run: npm ci

      - name: Check Environmental Variables
        working-directory: ./tools
        run: npx gulp check
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CURSEFORGE_PROJECT_ID: ${{ secrets.CURSEFORGE_PROJECT_ID }}
          CURSEFORGE_API_TOKEN: ${{ secrets.CURSEFORGE_API_TOKEN }}
          CFCORE_API_TOKEN: ${{ secrets.CFCORE_API_TOKEN }}

      - name: Update Mod List
        working-directory: ./tools
        run: npx gulp updateModList
        env:
          CFCORE_API_TOKEN: ${{ secrets.CFCORE_API_TOKEN }}

      - name: Commit and Push Release Changes
        uses: "stefanzweifel/git-auto-commit-action@v4"
        id: "commit-mod-list"
        with:
          commit_message: "Update Mod List\n\n[SKIP]"
          commit_author: "github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>"

      - name: Throw Error if No Release Changes were Detected
        if: ${{ steps.commit-mod-list.outputs.changes_detected == 'false' }}
        run: |
          echo "No Changes were Made."
          exit 1
